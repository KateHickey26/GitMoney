package commandline;

import java.util.Scanner;

/**
 * Top Trumps command line application
 */
public class TopTrumpsCLIApplication {

	/**
	 * This main method is called by TopTrumps.java when the user specifies that they want to run in
	 * command line mode. The contents of args[0] is whether we should write game logs to a file.
 	 * @param args
	 */
	public static void main(String[] args) {

		/* Initialising variables & objects needed for dialogue */
		Scanner s = new Scanner(System.in);
		String userInput;
		int userInputNumber =0;
		String userCategoryChoice;
		Boolean userMadeChoice;
		GameModel game;

/**
		boolean writeGameLogsToFile = false; // Should we write game logs to file?
		if (args[0].equalsIgnoreCase("true")) writeGameLogsToFile=true; // Command line selection
 */
		// State
		boolean userWantsToQuit = false; // flag to check whether the user wants to quit the application
		
		// Loop until the user wants to exit the game
		while (!userWantsToQuit) {

			/* Dialogue #1: ask user if he wants to see game statistics or play the game or quit */

			userMadeChoice = false;
			while(!userMadeChoice){
				System.out.println("Please type 'play' for starting a new game, 'statistics' for"+
					" viewing previous game statistics, or 'quit' for quitting the program.");
				userInput = s.next();
				s.nextLine();
				if(userInput=="statistics"){

					/* ######## Add method call to view statistics here */

					userMadeChoice = true;
				} else if(userInput.equalsIgnoreCase("play")){
					userMadeChoice = true;
				} else if(userInput.equalsIgnoreCase("quit")){
					System.exit(0);
				} else {
					System.out.println("Invalid user input. Please enter one of the options provided.");
				}
			}

			/* Dialogue #2: ask user how many AI players to include in the game */

			userMadeChoice = false;
			while (!userMadeChoice) {
				System.out.println("Please type number of AI players you wish to play against."+
								" Minimum 1 and maximum 4 AI players permitted.");
				userInputNumber = s.nextInt();
				s.nextLine();
				if(userInputNumber==1 || userInputNumber==2 || userInputNumber==3 || userInputNumber==4){
					userMadeChoice = true;
				}else {
					System.out.println("Invalid user input. Please enter a valid number of AI players.");
				}
			}

			/* Initialising game below */

            game = new GameModel(userInputNumber);

			/* ######## NOTE: I think this should be done via constructor since it's difficult (impossible!?!)
			 to access the game variables outside the class if the game is generated by a void
			 ######## Therefore: need to somehow combine CreateGame and Constructor methods
			 ######## Also: Contructor CANNOT be private method!
			 */

			/* ######## Add code here to create all card objects */



			/* ######## Add here code to randomly choose first active player */


			/* Dialogue Loop:
			*  On each round:
			*  -- if the user is active player, show their top card and then ask them to choose category
			*  -- if an AI player is active, play the rounds automatically,
			*     so that the AI chooses category and then cards are compared  */

			/* ######## Suggest moving code here from GameModel chooseCategory method */






			/*
			userMadeChoice = false;
			userCategoryChoice = null;
			While (!userMadeChoice) {
				System.out.println("Which catagory would you like to play? \nPlease choose from the following catagories and enter a number from 1 to 5."
					+ "\n1 - Floor Stickiness\n2 - Pint Price\n3 - Pub Quiz Quality\n4 - Atmosphere\n5 - Music Quality");
				userInputNumber = s.nextInt();
				s.nextLine();
				if(userInputNumber == 1) {
					userCategoryChoice = "Floor Stickiness";
				}else if(userInputNumber == 2) {
					userCategoryChoice = "Pint Price";
				}else if(userInputNumber == 3) {
					userCategoryChoice = "Pub Quiz Quality";
				}else if(userInputNumber == 4) {
					userCategoryChoice = "Atmosphere";
				}else if(userInputNumber == 5) {
					userCategoryChoice = "Music Quality";
				}

			 */
				/* add a message here confirming user selection within abn if statement condit on choice being made */
			/*
					chooseCategory();
				if(userCategoryChoice==null){
					System.out.println("Invalid user input. Please enter a valid category number.")
							*/
			/* userWantsToQuit=true; // use this when the user wants to exit the game */

		}


	}

}
