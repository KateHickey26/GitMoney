package commandline;

import java.util.Scanner;
import java.util.stream.IntStream;

/**
 * Top Trumps command line application
 */
public class TopTrumpsCLIApplication {

	/**
	 * This main method is called by TopTrumps.java when the user specifies that they want to run in
	 * command line mode. The contents of args[0] is whether we should write game logs to a file.
 	 * @param args
	 */
	public static void main(String[] args) {

		/* Initialising variables & objects needed for dialogue */
		Scanner s = new Scanner(System.in);
		int userInput;
		GameModel game;

/**
		boolean writeGameLogsToFile = false; // Should we write game logs to file?
		if (args[0].equalsIgnoreCase("true")) writeGameLogsToFile=true; // Command line selection
 */
		// State
		boolean userWantsToQuit = false; // flag to check whether the user wants to quit the application
		
		// Loop until the user wants to exit the game
		while (!userWantsToQuit) {

			/* Dialogue #1: ask user if he wants to see game statistics or play the game or quit */
			userInput = promptUserInput("Please enter (1) for starting a new game," +
					" (2) for viewing previous game statistics, or (3) for quitting the program.", new int[] {1, 2, 3});
			if (userInput==2){

				//add code here for viewing game statistics

			} else if(userInput==3){
				System.exit(0);
			}

			/* Dialogue #2: ask user how many AI players to include in the game */
			userInput = promptUserInput("Please type number of AI players you wish to play against."+
					" Minimum 1 and maximum 4 AI players permitted.", new int[] {1, 2, 3, 4});

			System.out.println("here");
			/* Initialising game below */

            game = new GameModel(userInput);
			System.out.println("herehere");
			/* ######## NOTE: I think this should be done via constructor since it's difficult (impossible!?!)
			 to access the game variables outside the class if the game is generated by a void
			 ######## Therefore: need to somehow combine CreateGame and Constructor methods
			 ######## Also: Contructor CANNOT be private method!
			 */

			/* ######## Add code here to create all card objects */



			/* ######## Add here code to randomly choose first active player */


			/* Dialogue Loop:
			*  On each round:
			*  -- if the user is active player, show their top card and then ask them to choose category
			*  -- if an AI player is active, play the rounds automatically,
			*     so that the AI chooses category and then cards are compared  */

			/* ######## Suggest moving code here from GameModel chooseCategory method */

		}

	}

	// Method for prompting user for input until user types valid input
	private static int promptUserInput(String userMessage, int[] userOptions) {
		Scanner s = new Scanner(System.in);
		int userInput;
		while (true) {
			System.out.println(userMessage);
			userInput = s.nextInt();
			s.nextLine();
			if (!(userInput == 0)) {
				if (contains(userOptions, userInput)) {
					return userInput;
				}
			}
			System.out.println("Invalid user input. Please enter one of the options provided.");
		}
	}

	// Method for checking if an array contains a value
	public static boolean contains(int[] array, int value) {
		for(int item:array){
			if (item==value) {
				return true;
			}
		}
		return false;
	}

}
